---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import arrowLeftIcon from '../../assets/images/radix-icons/arrow-left.svg';
import personIcon from '../../assets/images/radix-icons/person.svg?raw';
import { playerCount } from '../../utils/helpers';
import type { ImageMetadata } from 'astro';

export async function getStaticPaths() {
    const games = await getCollection('games');
    return games.map(game => ({
        params: { id: game.id },
        props: { game },
    }));
}
const { game } = Astro.props;
const { Content } = await render(game);
const gameSetupImgPath = `/src/assets/images/game-setups/${game.id}.svg`;
const gameSetupImgs = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/game-setups/*.svg');
if (!gameSetupImgs[gameSetupImgPath]) throw new Error(`"${game.id}" does not exist in glob: "src/assets/images/game-setups/*.svg"`);
---
<style>
    a {
        display: inline-flex;
        gap: .3rem;
        margin-bottom: .5rem;
        padding: .5rem .5rem .5rem 0;
        color: black;
        text-decoration: none;
    }
    article {
        max-width: 36rem;
        margin: 0 auto;
        padding: .5rem 1rem .5rem 1rem;
        border-radius: .375rem;
        line-height: 1.5rem;
        background-color: white;
        box-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);
    }
    #aliases, #player-count { color: rgb(64, 64, 64) }
    #game-setup {
        display: block;
        margin: 0 auto;
        width: 100%;
        max-width: 24rem;
        height: fit-content;
        max-height: 16rem;
    }
    #card-values {
        background-color: rgb(252, 211, 77);
        padding: .5rem .75rem;
        border-radius: .375rem;
        width: fit-content;
        margin-top: 1rem;
        p { margin: 0 }
        p + p { margin-top: .5rem }
        .card-value {
            font-weight: 500;
            margin-left: .75rem;
            float: right;
        }
    }
</style>
<Layout pageTitle=`${game.data.name} - Kortspillguiden`>
    <a href='/'>
        <Image src={arrowLeftIcon} width='18' alt='' />
        Oversikt
    </a>
    <article>
        <h1>{game.data.name}</h1>
        {game.data.aliases &&
            <p id='aliases'>eller <i>{game.data.aliases.join(', ')}</i></p>
        }
        <p id='player-count'>
            <Fragment set:html={personIcon} />
            {playerCount(game.data.minPlayers, game.data.maxPlayers, true)}
        </p>
        <Image id='game-setup' src={gameSetupImgs[gameSetupImgPath]()} alt='' />
        {game.data.lowestCard && game.data.highestCard &&
            <div id='card-values'>
                <p>Laveste kort: <span class='card-value'>{game.data.lowestCard}</span></p>
                <p>HÃ¸yeste kort: <span class='card-value'>{game.data.highestCard}</span></p>
            </div>
        }
        <Content />
    </article>
</Layout>
